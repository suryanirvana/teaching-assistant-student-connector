image: gradle:jdk11
services:
  - postgres:12.2-alpine

variables:
  SONAR_TOKEN: "7b58b4b00b275046d37b5d3c441196a149de07e4"
  SONAR_HOST_URL: "https://pmpl.cs.ui.ac.id/sonarqube/"
#  SONAR_TOKEN: $SONAR_TOKEN
#  SONAR_HOST_URL: $SONAR_HOST_URL
  POSTGRES_DB: nice_marmot
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: ""
  POSTGRES_HOST_AUTH_METHOD: trust

connect:
  image: postgres
  script:
    # official way to provide password to psql: http://www.postgresql.org/docs/9.3/static/libpq-envars.html
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "postgres" -U "$POSTGRES_USER"

stages:
  - build
  - test
  - deploy

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

Build:
  stage: build
  script:
    - gradle assemble
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week
  only:
    - master

Test:
  stage: test
  script:
    - gradle check

Deployment:
  image: ruby:2.6
  stage: deploy
  before_script:
    - gem install dpl
  script:
    - dpl --provider=heroku --app=$HEROKU_APPNAME --api-key=$HEROKU_APIKEY
  environment:
    name: production
    url: $HEROKU_APP_HOST
  only:
    - master

Sonarqube:
  stage: test
  script: gradle sonarqube -Dsonar.projectKey=advprog2020-i-group2assignment -Dsonar.host.url=https://pmpl.cs.ui.ac.id/sonarqube -Dsonar.login=7b58b4b00b275046d37b5d3c441196a149de07e4
  allow_failure: true
  only:
    - merge_requests
    - master

unitTests:
  stage: test
  script:
    - ./gradlew test
    - ./gradlew jacocoTestReport
    - cat build/jacocoHtml/index.html
  coverage: '/Total.*?([0-9]{1,3})%/'
  services:
    - postgres:12.2-alpine
  variables:
    POSTGRES_DB: nice_marmot
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: ""
    POSTGRES_HOST_AUTH_METHOD: trust

